// Замовлення турів:
// Пишемо реєстрацію користувача за допомогою prompt.  Окремо логін та пароль. Валідацію не потрібно робити.
// Аналогічно пишемо логінізацію: запитуємо логін та пароль, порівнюємо їх з даними, які були введені при авторизації. Якщо все вірно - виводимо в консоль, що логін успішний. Якщо ні - знову запитуємо логін та пароль.
// Запитуємо максимальну суму, яку готовий витратити користувач на тур.
// Виводимо список усіх країн в alert, які доступні по сумі для користувача.
// Вказуємо країну через prompt  і купляємо тур.
// Виводимо повідомлення, що тур оплачений і залишок на рахунку користувача.
// const countries = [
//   "Ukraine",
//   "Poland",
//   "Croatia",
//   "Montenegro",
//   "France",
//   "USA",
// ];
// const countriesPrice = [100, 200, 300, 400, 500, 600];
// let userName;
// let userPass;
// let userCredits;
// let userCountry;
// let maxPrice;

// Домашка: "Delivery"
// Ви пропонуєте користувачу список доступних ресторанів для замовлення їжі.
// Користувач обирає конкретний ресторан і отримує список доступних пунктів в меню для замовлення із вказанням їх вартості.
// Користувач обирає своє замовлення, після чого має отримати його підтвердження та основну інформацію: "що замовив, вартість та час доставки".
// const restaurants = [
//   {
//     order: [],
//     brand: "KFC",
//     menu: {
//       chicken: 50,
//       burger: 50,
//     },
//     deliveryTime: 60,
//   },
//   {
//     order: [],
//     brand: "mcDonalds",
//     menu: {
//       cola: 25,
//       burger: 30,
//     },
//     deliveryTime: 30,
//   },
//   {
//     order: [],
//     brand: "Burger King",
//     menu: {
//       burgerXXL: 170,
//       burger: 70,
//     },
//     deliveryTime: 20,
//   },
// ];
// const services = {
//   showMenu() {},
//   getMenu() {},
//   addOrder() {},
//   confirmOrder() {},
// };
// const torpedaDelivery = {
//   order: [],
//   chosenRestaurant: "",
//   getAvailableRestaurants() {},
//   chooseRestaurant() {},
//   chooseDishes() {},
// };
// torpedaDelivery.chooseRestaurant();
// На занятті нам потрібно буде:
// Створити розмітку header та main.
// В хедері буде інпут для пошуку конкретного покемона та кнопка "Улюблених покемонів". В мейн - список усіх покемонів.
// Відмалювати на головній сторінці (main) першу пейджу з усіма покемонами (20шт) при завантажені самої сторінки.
// Створити розмітку картки покемона. Обєкт з даними по покемону у вкладені (pokemon.js).
// Коли клікаєш по картці покемона - ввідкрити модалку з його характеристиками.
// Створити розмітку модалки. Сама модалка буде добавлятись в <div id="modal"></div>
// В модалці буде кнопка з можливістю добавити покемона в свої фаворити.
// При переході по кліку на кнопці "Улюблених покемонів"- відображати список покемонів, яких ви добавили.
// При покушу покемона через інпут - видаляти всіх покемонів з головної сторінки і рендерити знайденого.
// Тім-лід може готувати приблизні таски по обєму роботи в єдиний список по порядку їх виконання.
// Приблизний вигляд, що має бути  - у вкладені.
// Також, хотів вам дати частину html, але краще, щоб ви це зробили самостійно. Спробуйте наверстати основні блоки (хедер, основна сторінка, картка одного покемона і модалка). Якщо не встигнете - я дам розмітку.
// Шаблон вебпака можете скачати ось тут: https://github.com/Maximusvin/webpack-template (о
